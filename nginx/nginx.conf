events {}
http {
  # Use Docker embedded DNS so hostname resolution can happen at request time
  # Avoids startup failure when 'app' is not yet resolvable
  server {
    listen 80;
    server_name _;
    resolver 127.0.0.11 ipv6=off;
    set $upstream http://app:8080;

    # Proxy to app when available
    location / {
      proxy_pass $upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_connect_timeout 1s;
      proxy_read_timeout 5s;

      # If upstream fails, intercept and serve maintenance.html
      proxy_intercept_errors on;
      error_page 500 502 503 504 =200 /maintenance.html;
    }

    # Serve static maintenance page
    location = /maintenance.html {
      root /usr/share/nginx/html;
      add_header Cache-Control no-cache;
    }

    # Static assets (logo, etc.)
    location /static/ {
      alias /usr/share/nginx/html/static/;
      add_header Cache-Control no-cache;
    }
  }
}
