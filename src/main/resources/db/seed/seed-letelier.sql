-- =====================================================
-- seed-letelier.sql (H2 2.x compatible) — MULTI-ROL
-- Crea tablas de roles SOLO si faltan y luego inserta datos.
-- Usa IDENTITY (no AUTO_INCREMENT) para H2 2.x.
-- =====================================================

-- 1) ESQUEMA mínimo (idempotente) ----------------------
CREATE TABLE IF NOT EXISTS APP_ROLE (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS APP_USER_ROLE (
  user_id BIGINT NOT NULL,
  role_id BIGINT NOT NULL,
  PRIMARY KEY (user_id, role_id)
  -- (Opcional) FKs: en H2 2.x a veces fallan si el orden no es exacto;
  -- puedes agregarlas en una migración posterior si quieres:
  -- , FOREIGN KEY (user_id) REFERENCES APP_USER(id)
  -- , FOREIGN KEY (role_id) REFERENCES APP_ROLE(id)
);

-- 2) ROLES base (idempotentes) -------------------------
MERGE INTO APP_ROLE(name) KEY(name) VALUES ('ROLE_ADMIN');
MERGE INTO APP_ROLE(name) KEY(name) VALUES ('ROLE_OPTICO');
MERGE INTO APP_ROLE(name) KEY(name) VALUES ('ROLE_RECEPTOR');

-- 3) USUARIOS DEV (idempotentes) -----------------------
INSERT INTO APP_USER (id, username, password, enabled)
SELECT (SELECT COALESCE(MAX(id),0)+1 FROM APP_USER), 'admin', '{noop}admin123', TRUE
WHERE NOT EXISTS (SELECT 1 FROM APP_USER WHERE username='admin');
UPDATE APP_USER SET password='{noop}admin123', enabled=TRUE WHERE username='admin';

INSERT INTO APP_USER (id, username, password, enabled)
SELECT (SELECT COALESCE(MAX(id),0)+1 FROM APP_USER), 'optico', '{noop}optico123', TRUE
WHERE NOT EXISTS (SELECT 1 FROM APP_USER WHERE username='optico');
UPDATE APP_USER SET password='{noop}optico123', enabled=TRUE WHERE username='optico';

INSERT INTO APP_USER (id, username, password, enabled)
SELECT (SELECT COALESCE(MAX(id),0)+1 FROM APP_USER), 'receptor', '{noop}receptor123', TRUE
WHERE NOT EXISTS (SELECT 1 FROM APP_USER WHERE username='receptor');
UPDATE APP_USER SET password='{noop}receptor123', enabled=TRUE WHERE username='receptor';

-- 4) ASIGNACIONES de roles (idempotentes) --------------
INSERT INTO APP_USER_ROLE (user_id, role_id)
SELECT u.id, r.id FROM APP_USER u JOIN APP_ROLE r ON r.name='ROLE_ADMIN'
WHERE u.username='admin'
AND NOT EXISTS (SELECT 1 FROM APP_USER_ROLE x WHERE x.user_id=u.id AND x.role_id=r.id);

INSERT INTO APP_USER_ROLE (user_id, role_id)
SELECT u.id, r.id FROM APP_USER u JOIN APP_ROLE r ON r.name='ROLE_OPTICO'
WHERE u.username='optico'
AND NOT EXISTS (SELECT 1 FROM APP_USER_ROLE x WHERE x.user_id=u.id AND x.role_id=r.id);

INSERT INTO APP_USER_ROLE (user_id, role_id)
SELECT u.id, r.id FROM APP_USER u JOIN APP_ROLE r ON r.name='ROLE_RECEPTOR'
WHERE u.username='receptor'
AND NOT EXISTS (SELECT 1 FROM APP_USER_ROLE x WHERE x.user_id=u.id AND x.role_id=r.id);